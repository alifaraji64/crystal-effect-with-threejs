import{G as e,P as t,B as o,R as n,S as a,a as s,W as i,O as r,M as c,D as d,F as m,b as g,c as h,g as l}from"./vendor.b3892b12.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(o){const n=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((o,s)=>{const i=new URL(e,n);if(self[t].moduleMap[i])return o(self[t].moduleMap[i]);const r=new Blob([`import * as m from '${i}';`,`${t}.moduleMap['${i}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(r),onerror(){s(new Error(`Failed to import: ${e}`)),a(c)},onload(){o(self[t].moduleMap[i]),a(c)}});document.head.appendChild(c)})),self[t].moduleMap={}}}("/assets/");const p=new e,f={width:20,height:10,widthSegment:20,heightSegment:20};function u(){S.geometry.dispose(),S.geometry=new t(f.width,f.height,f.widthSegment,f.heightSegment);const{array:e}=S.geometry.attributes.position;for(let t=0;t<e.length;t+=3)e[t],e[t+1],e[t+2],e[t+2]+=Math.random();const n=[];for(let t=0;t<S.geometry.attributes.position.count;t++)n.push(0,.19,.4);S.geometry.setAttribute("color",new o(new Float32Array(n),3)),S.geometry.attributes.position.originalPosition=S.geometry.attributes.position.array}p.add(f,"width",1,30).onChange((()=>{u()})),p.add(f,"height",1,30).onChange((()=>{u()})),p.add(f,"widthSegment",1,50).onChange((()=>{u()})),p.add(f,"heightSegment",1,50).onChange((()=>{u()}));const b=new n,w=new a,y=new s(75,innerWidth/innerHeight,.1,1e3),M=new i;M.setClearColor(16776960,1),M.setSize(innerWidth,innerHeight),M.setPixelRatio(devicePixelRatio),document.getElementById("app").append(M.domElement),new r(y,M.domElement),y.position.z=5;const S=new g(new t(f.width,f.height,f.widthSegment,f.heightSegment),new c({side:d,flatShading:m,vertexColors:!0}));w.add(S);const{array:v}=S.geometry.attributes.position;for(let F=0;F<v.length;F+=3)v[F],v[F+1],v[F+2],v[F+2]+=Math.random()-.5;const U=[];for(let F=0;F<S.geometry.attributes.position.count;F++)U.push(0,.19,.4);S.geometry.setAttribute("color",new o(new Float32Array(U),3)),S.geometry.attributes.position.originalPosition=S.geometry.attributes.position.array;const C=new h(16777215,1);C.position.set(0,0,-1),w.add(C);const R=new h(16777215,1);R.position.set(0,0,1),w.add(R);const j={x:void 0,y:void 0};let x=1;!function e(){x+=.01,requestAnimationFrame(e),M.render(w,y),b.setFromCamera(j,y);const{array:t,originalPosition:o}=S.geometry.attributes.position;for(let a=0;a<t.length;a+=3)t[a]=o[a]+Math.cos(x+(Math.random()-.5))/1e3,t[a+1]=o[a+1]+Math.sin(x+(Math.random()-.5))/1e3,S.geometry.attributes.position.needsUpdate=!0;const n=b.intersectObject(S);if(n.length){const{color:e}=n[0].object.geometry.attributes;e.setX(n[0].face.a,.1),e.setY(n[0].face.a,.5),e.setZ(n[0].face.a,1),e.setX(n[0].face.b,.1),e.setY(n[0].face.b,.5),e.setZ(n[0].face.b,1),e.setX(n[0].face.c,.1),e.setY(n[0].face.c,.5),e.setZ(n[0].face.c,1),e.needsUpdate=!0;const t={r:0,g:.19,b:.4},o={r:.1,g:.5,b:1};l.to(o,{r:t.r,g:t.g,b:t.b,duration:1.4,onUpdate:function(){e.setX(n[0].face.a,o.r),e.setY(n[0].face.a,o.g),e.setZ(n[0].face.a,o.b),e.setX(n[0].face.b,o.r),e.setY(n[0].face.b,o.g),e.setZ(n[0].face.b,o.b),e.setX(n[0].face.c,o.r),e.setY(n[0].face.c,o.g),e.setZ(n[0].face.c,o.b),e.needsUpdate=!0}})}}(),addEventListener("mousemove",(e=>{j.x=e.x/innerWidth*2-1,j.y=-e.y/innerHeight*2+1}));
