import{G as e,O as t,g as o}from"./vendor.819defa6.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(o){const n=new URL(e,location),i=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((o,r)=>{const a=new URL(e,n);if(self[t].moduleMap[a])return o(self[t].moduleMap[a]);const s=new Blob([`import * as m from '${a}';`,`${t}.moduleMap['${a}']=m;`],{type:"text/javascript"}),c=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(s),onerror(){r(new Error(`Failed to import: ${e}`)),i(c)},onload(){o(self[t].moduleMap[a]),i(c)}});document.head.appendChild(c)})),self[t].moduleMap={}}}("/assets/");const n=new e,i={width:20,height:10,widthSegment:20,heightSegment:20};function r(){h.geometry.dispose(),h.geometry=new THREE.PlaneGeometry(i.width,i.height,i.widthSegment,i.heightSegment);const{array:e}=h.geometry.attributes.position;for(let o=0;o<e.length;o+=3)e[o],e[o+1],e[o+2],e[o+2]+=Math.random();const t=[];for(let o=0;o<h.geometry.attributes.position.count;o++)t.push(0,.19,.4);h.geometry.setAttribute("color",new THREE.BufferAttribute(new Float32Array(t),3)),h.geometry.attributes.position.originalPosition=h.geometry.attributes.position.array}n.add(i,"width",1,30).onChange((()=>{r()})),n.add(i,"height",1,30).onChange((()=>{r()})),n.add(i,"widthSegment",1,50).onChange((()=>{r()})),n.add(i,"heightSegment",1,50).onChange((()=>{r()}));const a=new THREE.Raycaster,s=new THREE.Scene,c=new THREE.PerspectiveCamera(75,innerWidth/innerHeight,.1,1e3),d=new THREE.WebGLRenderer;d.setClearColor(16776960,1),d.setSize(innerWidth,innerHeight),d.setPixelRatio(devicePixelRatio),document.getElementById("app").append(d.domElement),new t(c,d.domElement),c.position.z=5;const m=new THREE.PlaneGeometry(i.width,i.height,i.widthSegment,i.heightSegment),g=new THREE.MeshPhongMaterial({side:THREE.DoubleSide,flatShading:THREE.FlatShading,vertexColors:!0}),h=new THREE.Mesh(m,g);s.add(h);const{array:l}=h.geometry.attributes.position;for(let y=0;y<l.length;y+=3)l[y],l[y+1],l[y+2],l[y+2]+=Math.random()-.5;const f=[];for(let y=0;y<h.geometry.attributes.position.count;y++)f.push(0,.19,.4);h.geometry.setAttribute("color",new THREE.BufferAttribute(new Float32Array(f),3)),h.geometry.attributes.position.originalPosition=h.geometry.attributes.position.array;const u=new THREE.DirectionalLight(16777215,1);u.position.set(0,0,-1),s.add(u);const p=new THREE.DirectionalLight(16777215,1);p.position.set(0,0,1),s.add(p);const b={x:void 0,y:void 0};let E=1;!function e(){E+=.01,requestAnimationFrame(e),d.render(s,c),a.setFromCamera(b,c);const{array:t,originalPosition:n}=h.geometry.attributes.position;for(let o=0;o<t.length;o+=3)t[o]=n[o]+Math.cos(E+(Math.random()-.5))/1e3,t[o+1]=n[o+1]+Math.sin(E+(Math.random()-.5))/1e3,h.geometry.attributes.position.needsUpdate=!0;const i=a.intersectObject(h);if(i.length){const{color:e}=i[0].object.geometry.attributes;e.setX(i[0].face.a,.1),e.setY(i[0].face.a,.5),e.setZ(i[0].face.a,1),e.setX(i[0].face.b,.1),e.setY(i[0].face.b,.5),e.setZ(i[0].face.b,1),e.setX(i[0].face.c,.1),e.setY(i[0].face.c,.5),e.setZ(i[0].face.c,1),e.needsUpdate=!0;const t={r:0,g:.19,b:.4},n={r:.1,g:.5,b:1};o.to(n,{r:t.r,g:t.g,b:t.b,duration:1.4,onUpdate:function(){e.setX(i[0].face.a,n.r),e.setY(i[0].face.a,n.g),e.setZ(i[0].face.a,n.b),e.setX(i[0].face.b,n.r),e.setY(i[0].face.b,n.g),e.setZ(i[0].face.b,n.b),e.setX(i[0].face.c,n.r),e.setY(i[0].face.c,n.g),e.setZ(i[0].face.c,n.b),e.needsUpdate=!0}})}}(),addEventListener("mousemove",(e=>{b.x=e.x/innerWidth*2-1,b.y=-e.y/innerHeight*2+1}));
